#! /bin/bash
#------------------------------------------------------------------------------
#$Author: melanie $
#$Date: 2017-07-27 18:34:29 +0300 (Thu, 27 Jul 2017) $
#$Revision: 15 $
#$URL: svn://saulius-grazulis.lt/bibliophile/branches/feature/melanie-implement-parameters/europepmc-json $
#------------------------------------------------------------------------------
#*
# This script is made to collect search results on europepmc website :
# User enters the search terms as arguments of the script, using the option 
# --search_terms, or writes them in a file, given as an argument as well. The
# script makes the query on the website and returns the results on the standard
# output.
#**

TMP_DIR="${TMPDIR}"

set -ue
## set -x

script() { echo "# $*"; cat; }
setvar() { eval $1="'$3'"; }

setvar Id = '$Id: script.bash 32 2017-07-26 14:05:11Z saulius $'

setvar FILES = ""

setvar BASENAME = "$(basename $0)"

#** USAGE:
#**   $0 --options 'search_term_1+search_term_2' files*.inp
#**
#** OPTIONS:
#**  --version         Print name, version, date and author of the script.
#**
#**  --search_terms    Add search terms (in quotes) as arguments
#**   -s                                       after this option.
#**
#**  --help            Print short help message (this message) and exit.
while [ $# -gt 0 ]
do
    case $1 in
        --version|--versio|--versi|--vers|--ver|--ve|--v)
            echo $Id
            exit
            ;;
        --help|--hel|--he|--h)
            awk '/#\*/,/#\*\*/ {
                    sub("^ *#[*]?[*]?", ""); \
                    gsub("\\$0","'$(basename $0)'"); \
                    print $0
                }' $0
            exit
            ;;
        --search_terms|--search_term|--search|--searc|--sear|--sea|--se|--s|-s)
            SEARCH_TERMS="$2"
            shift
            ;;
        --options|--option)
            echo "$0: '--options' is a place-holder; " \
                 "please use '$0 --help' to get the list of available options."
            exit 2
            ;;
        -*) echo "$0: unknown option '$1'" >&2 ; exit 1 ;;
        *)  FILES="${FILES} '$1'" ;;
    esac
    shift
done

echo ${FILES} 
echo ${SEARCH_TERMS}
exit 0

eval set -- "${FILES}"

test -z "${TMP_DIR}" && TMP_DIR="/tmp"
TMP_DIR="${TMP_DIR}/tmp-${BASENAME}-$$"
mkdir "${TMP_DIR}"

## trap "rm -rf '${TMP_DIR}'" 1 2 3 15
trap "rm -rf '${TMP_DIR}'" HUP INT QUIT TERM

set -x

## sleep 6

rm -rf "${TMP_DIR}"
#------------------------------------------------------------------------------#
serverURL=http://www.ebi.ac.uk
resourcePATH=europepmc/webservices/rest/search
request=query=crystal+structure
pageSize=1000
cursorMark='*'
format=json
options="&pageSize=$pageSize&format=$format"
queryURL="$serverURL/$resourcePATH?$request$options"

result="$(curl -sSL "$queryURL&cursorMark=$cursorMark")"
echo "$result"
cursorMark=$(echo "$result" \
        | jq . | awk '/nextCursorMark/{print $2}' | sed 's/[",]//g')
n=$(echo "$result" | jq . | awk '/hitCount/{print $2}' | sed 's/,//')

j=$(expr $n / $pageSize) 
if [ $(expr $n % $pageSize) -eq 0 ]
then
    j=$(expr $j - 1)
fi

for i in $(seq 1 $j) ;
do
    result="$(curl -sSL "$queryURL&cursorMark=$cursorMark")"
    echo "$result"
    cursorMark=$(echo "$result" \
        | jq . | awk '/nextCursorMark/{print $2}' | sed 's/[",]//g')
done
